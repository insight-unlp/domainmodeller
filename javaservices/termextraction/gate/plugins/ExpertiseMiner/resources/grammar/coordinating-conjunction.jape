/*
 *  coordinating-conjunction.jape
 *
 * Copyright (c) 1998-2004, The University of Sheffield.
 *
 *  This file is part of GATE (see http://gate.ac.uk/), and is free
 *  software, licenced under the GNU Library General Public License,
 *  Version 2, June 1991 (in the distribution as file licence.html,
 *  and also available at http://gate.ac.uk/gate/licence.html).
 *
 *  Georgeta Bordea, 2010-03-27
 *
 */
 
Phase:  CoordinatingConjunction
Input:  Token
Options: control = appelt

Rule: CoordinatingConjunctionRule1
(
({Token.category =~ "NN|NNS|NP|NPS|NNP|NNPS"})
({Token.category == "CC", Token.string =~ "and" }):cc
({Token.category =~ "NN|NNS|NP|NPS|NNP|NNPS"})
)
-->
{
  gate.AnnotationSet cc = (gate.AnnotationSet)bindings.get("cc");

  gate.Annotation ccAnn = (gate.Annotation) cc .iterator().next();
  gate.FeatureMap ccfeatures = Factory.newFeatureMap();
  ccfeatures.put("kind", "CoordinatingConjunction");
  ccfeatures.put("rule", "CoordinatingConjunctionRule1");
  
  annotations.add(cc.firstNode(), cc.lastNode(), "CoordinatingConjunction", ccfeatures);
}


Rule: CoordinatingConjunctionRule2
({Token.category =~ "JJ|VBN|VBG"})
({Token.category == "CC", Token.string =~ "and" }):cc
({Token.category =~ "JJ|VBN|VBG"})
-->
{
  gate.AnnotationSet cc = (gate.AnnotationSet)bindings.get("cc");

  gate.Annotation ccAnn = (gate.Annotation) cc .iterator().next();
  gate.FeatureMap ccfeatures = Factory.newFeatureMap();
  ccfeatures.put("rule", "CoordinatingConjunctionRule2");
  
  annotations.add(cc.firstNode(), cc.lastNode(), "CoordinatingConjunction", ccfeatures);
}
