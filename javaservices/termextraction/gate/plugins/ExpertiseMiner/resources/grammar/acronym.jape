/*
 *  acronym.jape
 *
 * Copyright (c) 1998-2004, The University of Sheffield.
 *
 *  This file is part of GATE (see http://gate.ac.uk/), and is free
 *  software, licensed under the GNU Library General Public License,
 *  Version 2, June 1991 (in the distribution as file licence.html,
 *  and also available at http://gate.ac.uk/gate/licence.html).
 *
 *  Georgeta Bordea, 2010-03-02
 *
 */
 
Phase:  AcronymCandidate
Input:  Token
Options: control = appelt

Rule: AcronymRule1
(
 ({Token.kind=="punctuation",Token.string=="("})
 ({Token.category=="CC"})[0,1]
 (
  {Token.category=="NNP",Token.orth=~"allCaps|mixedCaps"}
 ):acronym
 ({Token.kind=="punctuation",Token.string==")"})
):acr
-->
{  
  gate.AnnotationSet acronym = (gate.AnnotationSet)bindings.get("acronym");
  
  // extract the acronym string
  String acronymString = "";  
  if (acronym != null){
   // gaining access to token annotation
   java.util.ArrayList tokens = new java.util.ArrayList(acronym.get("Token", acronym.firstNode().getOffset(), acronym.lastNode().getOffset()));  
   
   java.util.Iterator tItr = tokens.iterator();
   if (tItr.hasNext()){
    gate.FeatureMap tFeat = ((gate.Annotation)tItr.next()).getFeatures(); 
    acronymString = (String)tFeat.get("string");
   }
  }
  
  gate.Annotation acronymAnn = (gate.Annotation)acronym.iterator().next();
  gate.FeatureMap acronymfeatures = Factory.newFeatureMap();
  acronymfeatures.put("kind", "acronym");
  acronymfeatures.put("rule", "AcronymRule1");
  //add the acronym string to acronym features
  acronymfeatures.put("string", acronymString);
  
  annotations.add(acronym.firstNode(), acronym.lastNode(), "AcronymCandidate", acronymfeatures);
}





